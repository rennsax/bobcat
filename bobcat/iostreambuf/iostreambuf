#ifndef INCLUDED_BOBCAT_IOSTREAMBUF_
#define INCLUDED_BOBCAT_IOSTREAMBUF_

#include <fstream>
#include <streambuf>

namespace FBB
{

class IOStreambuf: public std::streambuf
{
    char d_buf;
    std::istream *d_in;
    std::ostream *d_out;

    public:
        IOStreambuf();                                          // 1.f
        IOStreambuf(std::istream &in, std::ostream &out);       // 2.f

        ~IOStreambuf() override;

        void open(std::istream &in, std::ostream &out);

    protected:
        pos_type pSeekoff(off_type offset, std::ios::seekdir way,
                      std::ios::openmode mode = std::ios::in | std::ios::out);

        pos_type pSeekpos(pos_type offset,                      // .f
                      std::ios::openmode mode = std::ios::in | std::ios::out);

    private:
        int pSync();                            // see the 4.09.00 changelog
                                                // see the 4.09.00 changelog
        std::streamsize pXsputn(char const *buffer,  
                                std::streamsize n);

        int underflow() override;
        pos_type seekoff(off_type offset, std::ios::seekdir way,
                       std::ios::openmode mode = std::ios::in | std::ios::out)
                                                                    override;
        pos_type seekpos(pos_type offset, 
                       std::ios::openmode mode = std::ios::in | std::ios::out)
                                                                    override;
        int sync() override;
        int overflow(int c) override;
        std::streamsize xsputn(char const *buffer, std::streamsize n) 
                                                                    override;
};

#include "iostreambuf1.f"
#include "iostreambuf2.f"
#include "pseekpos.f"

} // namespace FBB

#endif
