        class Pimpl
        {
            Zone d_zone;
          
                                                      // DST is active
            static std::mutex s_mutex;
            static std::unordered_map<DateTime const *, 
                                      std::unique_ptr<Pimpl>> s_pimpl;

            public:
                Pimpl() = default;
                                                            // 1
                Pimpl(Zone const &zone);
            
                // bool activeDST() const;

                std::string const &spec() const;            // .f
                int dstSeconds() const;                     // .f

        
                                                    // zone specification
                static Pimpl const &get(DateTime const *ptr);

                static void copy(DateTime *ptr, DateTime const &other);
                static void erase(DateTime const *ptr);
                static void move(DateTime *ptr, DateTime &&other);
                static void set(DateTime const *ptr, Zone const &spec);
                static void swap(DateTime &lhs, DateTime &rhs);
        };

/*
        //    bool d_DSTactive = false;                   // for the current time
        //    DSTSpec d_spec;
        

                void setDSTactive(tm *ts);
                void updateDST(time_t utcSecs);

                static void refreshDST(DateTime const *ptr);// uses ptr->d_time
            
                bool supportsDST() const;               // 2.f
                int  dstMinutes() const;
*/

