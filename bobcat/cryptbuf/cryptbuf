#ifndef INCLUDED_BOBCAT_CRYPTBUF_
#define INCLUDED_BOBCAT_CRYPTBUF_

#include <openssl/ossl_typ.h>

#include <ostream>
#include <streambuf>
#include <string>

namespace FBB
{

class CryptBuf: public std::streambuf
{
    friend std::ostream &end(std::ostream &out);

    EVP_CIPHER const   *d_md;

    protected:
        CryptBuf(char const *type);

        EVP_CIPHER const *md() const;                               // .f

        static unsigned char *ucharPtr(std::string &str);           // 1.f
        static unsigned char const *ucharPtr(                       // 2.f
                                       std::string const &str);

    private:
        virtual void end_() = 0; // this function implements the actions of
                // the end-manipulator in derived classes. This allows the
                // end-manipulator to perform only one check, after which it
                // can call end_ to perform the correct end_ members
};

//  #include "md.f"
// static
inline EVP_CIPHER const *CryptBuf::md() const
{
    return d_md;
}

//  #include "ucharptr1.f"
// static
inline unsigned char *CryptBuf::ucharPtr(std::string &str)
{
    return reinterpret_cast<unsigned char *>(&str[0]);
}

//  #include "ucharptr2.f"
// static
inline unsigned char const *CryptBuf::ucharPtr(std::string const &str)
{
    return reinterpret_cast<unsigned char const *>(&str[0]);
}
   

} // FBB        
#endif
