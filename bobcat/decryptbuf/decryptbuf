#ifndef INCLUDED_DECRYPTBUF_
#define INCLUDED_DECRYPTBUF_

// https://wiki.openssl.org/index.php/EVP_Symmetric_Encryption_and_Decryption

#include <iosfwd>
#include <streambuf>
#include <openssl/ossl_typ.h>

namespace FBB
{

class DecryptBuf: public std::streambuf
{
    EVP_CIPHER_CTX     *d_ctx;
    EVP_CIPHER const   *d_md;

    std::string         d_encrypted;
    std::string         d_decrypted;

    std::string  d_iv;
    std::string  d_key;

    std::ostream       &d_outStream;

    public:
        DecryptBuf(std::ostream &outStream, char const *type, 
                   std::string const &key, std::string const &iv,
                   size_t bufSize = 1024);
        ~DecryptBuf() override;

        bool setRounds(size_t nRounds);             // RC5 8, 12 or 16

        void end();

    protected:
        EVP_CIPHER_CTX *cipherCtx();

    private:
        int overflow(int c) override;

        void setMD(char const *type);
        void flushBuffer();
        void setp();

        static unsigned char *ucharPtr(char *charPtr);              // 1.f
        static unsigned char const *ucharPtr(char const *charPtr);  // 2.f
};

// defined in bobcat/encryptbuf/end.cc
std::ostream &end(std::ostream &out);       // end-manipulator

}   // FBB
        
#endif



